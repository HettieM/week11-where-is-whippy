{"version":3,"sources":["components/shared/landing.js","components/shared/header.js","components/shared/user.js","components/shared/signup.js","components/shared/login.js","components/vendor/home.js","utils/london-map.js","components/vendor/heatmap.js","App.js","index.js"],"names":["Landing","setIsVendor","isVendor","console","log","className","src","to","onClick","Header","logInStatus","href","User","SignUp","action","for","type","id","name","required","value","checked","Login","Home","React","useState","setRouteName","onSubmit","event","htmlFor","onChange","target","class","pathname","state","editSchedule","LondonMap","googleMapsApiKey","process","REACT_APP_GOOGLE_API_KEY","mapContainerStyle","height","width","zoom","center","lat","lng","Heatmap","require","config","App","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.708b57a2.chunk.js","sourcesContent":["//First page - choice between customer + vendor options\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Landing({ setIsVendor, isVendor }) {\n  console.log(\"Landing -> setIsVendor\", setIsVendor)\n  console.log(isVendor)\n  return (\n    <section>\n      <h2 className=\"landing-subtitle\">Tired of waiting for the jingle?</h2>\n      <img\n        className=\"landing-img\"\n        src=\"https://media.giphy.com/media/3orieXuD6SY02z1VtK/giphy.gif\"\n      />\n      <Link\n        to=\"/user\"\n        onClick={() => setIsVendor(true)}\n        className=\"landing-btn-vendors\"\n      >\n        Vendors\n      </Link>\n\n      <Link\n        to=\"/user\"\n        onClick={() => setIsVendor(false)}\n        className=\"landing-btn-customers\"\n      >\n        Customers\n      </Link>\n    </section>\n  )\n\n  // function handleLoginLinkVendor() {\n  //   alert(\"Vendor login button clicked\")\n  //   setIsVendor(true)\n  // }\n\n  // function handleLoginLinkCustomer() {\n  //   console.log(isVendor)\n  //   setIsVendor(false)\n  //   console.log(isVendor)\n  //   // alert(\"Customer login button clicked\")\n  // }\n}\n","import React from \"react\"\n\nexport default function Header({ logInStatus }) {\n  return (\n    <header>\n      <h1>Where's Whippy</h1>\n      {!logInStatus ? <a href=\"#\">Log In</a> : <a href=\"#\">Log Out</a>}\n    </header>\n  )\n}\n","//Second page (have chosen whether customer/vedor) - choice between login + signup\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function User({ isVendor }) {\n  return (\n    <section>\n      {isVendor ? (\n        <section>\n          <h2 className=\"user-subtitle\">Find ice cream lovers today</h2>\n          <img src=\"#\" />\n          <Link to=\"/signup\" className=\"signup-btn-vendors\">\n            SIGNUP HERE\n          </Link>\n\n          <Link to=\"login\" className=\"login-btn-vendors\">\n            LOGIN HERE\n          </Link>\n        </section>\n      ) : (\n        <section>\n          <h2 className=\"user-subtitle\">Find ice cream today</h2>\n          <img src=\"#\" />\n          <Link to=\"/signup\" className=\"signup-btn-customers\">\n            Signup Here\n          </Link>\n\n          <Link to=\"/login\" className=\"login-btn-customer\">\n            Login Here\n          </Link>\n        </section>\n      )}\n    </section>\n  )\n}\n","import React from \"react\"\n\nexport default function SignUp({ isVendor }) {\n  return (\n    <section>\n      {isVendor ? (\n        <form action=\"submit\">\n          <label for=\"vendorName\">Name</label>\n          <input type=\"text\" id=\"vendorName\" name=\"name\" required />\n\n          <label for=\"vendorEmail\">Email</label>\n          <input type=\"email\" id=\"vendorEmail\" name=\"email\" required />\n\n          <label for=\"vendorPassword\">Password</label>\n          <input type=\"password\" id=\"vendorPassword\" name=\"password\" required />\n\n          <label for=\"vendorMobile\">Mobile Number</label>\n          <input type=\"tel\" id=\"vendorMobile\" name=\"mobile\" required />\n\n          <label for=\"vendorCompany\">Company Name</label>\n          <input type=\"text\" id=\"vendorCompany\" name=\"company\" required />\n\n          <fieldset id=\"vendorAlcohol\">\n            <legend>Do you sell alcohol?</legend>\n            <label for=\"alcoholYes\">Yes</label>\n            <input\n              type=\"radio\"\n              id=\"alcoholYes\"\n              name=\"alcohol\"\n              value=\"true\"\n              checked\n            />\n\n            <label for=\"alcoholNo\">No</label>\n            <input type=\"radio\" id=\"alcoholNo\" name=\"alcohol\" value=\"false\" />\n          </fieldset>\n\n          <fieldset id=\"vendorVegan\">\n            <legend>Do you offer vegan options?</legend>\n            <label for=\"veganYes\">Yes</label>\n            <input\n              type=\"radio\"\n              id=\"veganYes\"\n              name=\"vegan\"\n              value=\"true\"\n              checked\n            />\n\n            <label for=\"veganNo\">No</label>\n            <input type=\"radio\" id=\"veganNo\" name=\"vegan\" value=\"false\" />\n          </fieldset>\n          <button>Sign up</button>\n        </form>\n      ) : (\n        <form action=\"\">\n          <label for=\"customerName\">Name</label>\n          <input type=\"text\" id=\"customerName\" name=\"name\" required />\n\n          <label for=\"customerEmail\">Email</label>\n          <input type=\"email\" id=\"customerEmail\" name=\"email\" required />\n\n          <label for=\"customerPassword\">Password</label>\n          <input\n            type=\"password\"\n            id=\"customerPassword\"\n            name=\"password\"\n            required\n          />\n\n          <fieldset id=\"customerAge\">\n            <legend>What is your age group?</legend>\n            <label for=\"age-group-1\">14-18</label>\n            <input\n              type=\"radio\"\n              id=\"ageGroup1\"\n              name=\"ageGroup\"\n              value=\"14-18\"\n              checked\n            />\n            <label for=\"age-group-2\">19-24</label>\n            <input type=\"radio\" id=\"ageGroup2\" name=\"ageGroup\" value=\"19-24\" />\n            <label for=\"ageGroup3\">25-30</label>\n            <input type=\"radio\" id=\"ageGroup3\" name=\"ageGroup\" value=\"25-30\" />\n            <label for=\"ageGroup4\">31-40</label>\n            <input type=\"radio\" id=\"ageGroup4\" name=\"ageGroup\" value=\"31-40\" />\n          </fieldset>\n\n          <fieldset>\n            <legend>\n              In order to use this app, I consent to sharing my location\n              information\n            </legend>\n            <label for=\"consent\">I consent</label>\n            <input\n              type=\"radio\"\n              id=\"consent\"\n              name=\"consent\"\n              value=\"true\"\n              required\n            />\n          </fieldset>\n          <button>Sign up</button>\n        </form>\n      )}\n    </section>\n  )\n}\n","import React from \"react\"\n\nexport default function Login({ isVendor }) {\n  return (\n    <section>\n      {isVendor ? (\n        <form>\n          <label for=\"vendorEmail\">Email</label>\n          <input type=\"email\" id=\"vendorEmail\" name=\"email\" required />\n\n          <label for=\"vendorPassword\">Password</label>\n          <input type=\"password\" id=\"vendorPassword\" name=\"password\" required />\n\n          <button className=\"login-btn-vendor\">Login</button>\n        </form>\n      ) : (\n        <form>\n          <label for=\"customerEmail\">Email</label>\n          <input type=\"email\" id=\"customerEmail\" name=\"email\" required />\n\n          <label for=\"customerPassword\">Password</label>\n          <input\n            type=\"password\"\n            id=\"customerPassword\"\n            name=\"password\"\n            required\n          />\n          <button className=\"login-btn-customer\">Login</button>\n        </form>\n      )}\n    </section>\n  )\n}\n// <h2 className=\"login-subtitle\">Find</h2>Find\n","// Home page for vendor - includes current route and links to add/ change route + see heatmap\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Home() {\n  const [routeName, setRouteName] = React.useState(\"\")\n\n  function handleSubmit(event) {\n    //   PRINT THE SELECTED ROUTE\n    //   event.preventDefault();\n    //fetch request to the api and 'SELECT * FROM routes where route_name = {routeName}\n    //.then(data => return data- we want to print the data)\n  }\n\n  function handleRoute(event) {\n    setRouteName(event.target.value)\n  }\n\n  function displayOptions() {\n    //fetch request to AP `SELECT route_name FROM routes WHERE vendor_id == {vendor_id}\n    //.then(data => data.forEach(print as option))\n  }\n\n  return (\n    <section>\n      <h2 className=\"home-subtitle\">\n        Welcome back\n        <str>\n          <i>name</i>\n        </str>\n        !\n      </h2>\n      <h2 className=\"home-subtitle\">Today's route is:</h2>\n\n      <form className=\"home-dropdown\" onSubmit={handleSubmit}>\n        <label className=\"home-dropdown__label\" htmlFor=\"routes\">\n          Select routes\n        </label>\n        <select\n          onChange={handleRoute}\n          id=\"routes\"\n          className=\"home-dropdown__input\"\n        >\n          {/* Run displayOptions */}\n          <option value=\"\">Route 1</option>\n          <option value=\"\"> Route 2</option>\n          <option value=\"\"> Route 3</option>\n        </select>\n        <button className=\"home-dropdown__submit-btn\" type=\"submit\">\n          Choose\n        </button>\n      </form>\n\n      <section className=\"current-route\"></section>\n\n      <section className=\"toggleAlerts\">\n        <p className=\"toggleAlert-subtitle\">Turn on alerts for customers</p>\n        <label class=\"switch\">\n          <input type=\"checkbox\" />\n          <span class=\"slider round\"></span>\n        </label>\n      </section>\n\n      <section className=\"home-links\">\n        <Link to=\"/schedule\" className=\"home-link__schedule\">\n          Create a new schedule\n        </Link>\n\n        <Link\n          to={{\n            pathname: \"/schedule\",\n            state: {\n              editSchedule: true,\n            },\n          }}\n          className=\"home-link__schedule\"\n        >\n          Edit schedule\n        </Link>\n\n        <Link\n          to={{\n            pathname: \"/schedule\",\n            state: {\n              editSchedule: false,\n            },\n          }}\n          className=\"home-link__schedule\"\n        >\n          Add new schedule\n        </Link>\n\n        <Link to=\"/heatmap\" className=\"home-link__heatmap\">\n          View heatmap\n        </Link>\n      </section>\n    </section>\n  )\n}\n","import React from \"react\"\n// import { Map, GoogleApiWrapper } from \"google-maps-react\"\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\"\nrequire(\"dotenv\").config()\n\nexport default function LondonMap() {\n  const mapStyles = {\n    height: 500,\n    width: 500,\n  }\n\n  const defaultCenter = {\n    lat: 51.5074,\n    lng: 0.1278,\n  }\n\n  return (\n    <section>\n      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={10}\n          center={defaultCenter}\n        />\n      </LoadScript>\n    </section>\n  )\n}","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport LondonMap from \"../../utils/london-map.js\"\n\nexport default function Heatmap() {\n  //fetch API - retrieve all lat/lng coordinates from\n  //then(data => data.forEach(create new array heatmapData))\n\n  //   const [customerPosition, getCustomerPositions] = React.useState({})\n  //   const marker = (position) => {\n  //     const position = {\n  //       lat: position.coords.latitude,\n  //       lng: position.coords.longitude,\n  //     } //marker should be an object made up the arrays pulled from the fetch request?\n  //     getCustomerPositions(customerPosition)\n  //   }\n\n  //   React.useEffect(() => {\n  //     navigator.geolocation.getCustomerPosition(marker)\n  //   })\n\n  // where does code for the marker go? to be imported or exported?\n\n  return (\n    <section>\n      <section className=\"map\">\n        <LondonMap />\n      </section>\n      <Link\n        to={{\n          pathname: \"/schedule\",\n          state: {\n            editSchedule: true,\n          },\n        }}\n        className=\"home-link__schedule\"\n      >\n        Edit schedule\n      </Link>\n    </section>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport Landing from \"./components/shared/landing.js\"\nimport Header from \"./components/shared/header.js\"\nimport User from \"./components/shared/user.js\"\nimport Signup from \"./components/shared/signup.js\"\nimport Login from \"./components/shared/login.js\"\nimport Home from \"./components/vendor/home.js\"\nimport Heatmap from \"./components/vendor/heatmap.js\"\n// For react router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nfunction App() {\n  const [logInStatus, setLogInStatus] = useState(false)\n  const [isVendor, setIsVendor] = useState(true)\n  console.log(\"App -> isVendor\", isVendor)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header logInStatus={logInStatus} />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Landing setIsVendor={setIsVendor} isVendor={isVendor} />\n            )}\n          />\n          <Route path=\"/user\" component={() => <User isVendor={isVendor} />} />\n          <Route\n            path=\"/signup\"\n            component={() => <Signup isVendor={isVendor} />}\n          />\n          <Route\n            path=\"/login\"\n            component={() => <Login isVendor={isVendor} />}\n          />\n          <Route path=\"/home\" component={() => <Home />} />\n          <Route path=\"/heatmap\" component={() => <Heatmap />} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\n/* <Route exact path=\"/props-through-render\" render={(props) => <PropsPage {...props} title={`Props through render`} />} />\n\n<Route\n  path='/dashboard'\n  component={() => <Dashboard isAuthed={true} />}\n/> */\n\n/* <Route\n  path='/dashboard'\n  render={(props) => <Dashboard {...props} isAuthed={true} />}\n/> */\n\nexport default App\n\n/* <Route path=\"/signup-c\" component={signupCustomer} />\n<Route path=\"/signup-v\" component={signupVendor} /> */\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}